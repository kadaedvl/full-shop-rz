generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    password String   @unique
    email    String
    role     UserRole @default(USER)
    verified DateTime

    provider   String?
    providerId String?

    carts            Cart?
    order            Order[]
    vereficationCode VereficationCode?

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Caregory {
    id Int @id @default(autoincrement())

    name     String    @unique
    products Product[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String

    variations ProductVariation[]

    category   Caregory @relation(fields: [categoryId], references: [id])
    categoryId Int

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model ProductVariation {
    id Int @id @default(autoincrement())

    price Int
    size  Int?

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    cartItems CartItem[]

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    token String

    totalAmount Int @default(0)

    createdAt DateTime   @default(now())
    updateAt  DateTime   @updatedAt
    cartItem  CartItem[]
}

model CartItem {
    id Int @id @default(autoincrement())

    productVariation   ProductVariation @relation(fields: [productVariationId], references: [id])
    productVariationId Int

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    quantity Int @default(1)

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?

    token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullName String
    address  String
    email    String
    phone    String
    comment  String?

    createdAt DateTime @default(now())
    updateAt  DateTime @updatedAt
}

model VereficationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String

    createdAt DateTime @default(now())

    @@unique([userId, code])
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    ADMIN
    USER
}
